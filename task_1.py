import re, pathlib

# import random
# import pathlib

# current_dir = pathlib.Path(__file__).parent

# def get_random_joke():
#     try:
#         with open(current_dir / "jokes.txt", "r", encoding="utf-8") as file:
#             jokes = file.readlines()
#             return random.choice(jokes).strip()
#     except FileNotFoundError:
#         return "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —Ñ–∞–π–ª –∑ –∞–Ω–µ–∫–¥–æ—Ç–∞–º–∏."
# –¶–µ–π –∫–æ–¥ –≤–∏–∑–Ω–∞—á–∞—î —Ñ—É–Ω–∫—Ü—ñ—é get_random_joke(), —è–∫–∞ –≤—ñ–¥–∫—Ä–∏–≤–∞—î —Ñ–∞–π–ª 
# jokes.txt, —Ä–æ–∑—Ç–∞—à–æ–≤–∞–Ω–∏–π —É —Ç—ñ–π –∂–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó, —â–æ –π —Å–∞–º —Å–∫—Ä–∏–ø—Ç, 
# —ñ –≤–∏–±–∏—Ä–∞—î –∑ –Ω—å–æ–≥–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –∞–Ω–µ–∫–¥–æ—Ç. –ó–º—ñ–Ω–Ω–∞ current_dir –≤–∏–∑–Ω–∞—á–∞—î 
# –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é, –¥–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —Ñ–∞–π–ª —Å–∫—Ä–∏–ø—Ç—É. –ù–∞–º —Ü–µ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ, —â–æ–± —à–ª—è—Ö 
# –¥–æ —Ñ–∞–π–ª—É current_dir / "jokes.txt" –∑–∞–≤–∂–¥–∏ –±—É–≤ –≤—ñ—Ä–Ω–∏–π –¥–µ –± –º–∏ 
# –Ω–µ –≤–∏–∫–æ–Ω–∞–ª–∏ –Ω–∞—à—É –ø—Ä–æ–≥—Ä–∞–º—É.
# üì¶example_joke
#  ‚î£ üìÇjoke
#  ‚îÉ ‚î£ üìújokes.txt
#  ‚îÉ ‚î£ üìújokes_handler.py
#  ‚îÉ ‚îó üìú__init__.py
#  ‚îó üìúmain.py
# –§–∞–π–ª __init__.py:
# from .jokes_handler import get_random_joke

# from joke import get_random_joke

# def main():
#     name = input("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è: ")
#     print(f"–ü—Ä–∏–≤—ñ—Ç, {name}!")

#     while True:
#         user_response = input(f"{name}, –±–∞–∂–∞—î—Ç–µ –ø–æ—á—É—Ç–∏ –∞–Ω–µ–∫–¥–æ—Ç? (—Ç–∞–∫/–Ω—ñ): ").lower()
#         if user_response == "—Ç–∞–∫":
#             print(get_random_joke())
#         elif user_response == "–Ω—ñ":
#             print(f"–î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è, {name}!")
#             break

# if __name__ == "__main__":
#     main()



#–£ –≤–∞—Å —î —Ç–µ–∫—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –º—ñ—Å—è—á–Ω—ñ –∑–∞—Ä–æ–±—ñ—Ç–Ω—ñ –ø–ª–∞—Ç–∏ 
# —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤ —É –≤–∞—à—ñ–π –∫–æ–º–ø–∞–Ω—ñ—ó. –ö–æ–∂–µ–Ω —Ä—è–¥–æ–∫ —É —Ñ–∞–π–ª—ñ –º—ñ—Å—Ç–∏—Ç—å –ø—Ä—ñ–∑–≤–∏—â–µ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞ —Ç–∞ –π–æ–≥–æ 
# –∑–∞—Ä–æ–±—ñ—Ç–Ω—É –ø–ª–∞—Ç—É, —è–∫—ñ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–æ—é –±–µ–∑ –ø—Ä–æ–±—ñ–ª—ñ–≤.
# –ù–∞–ø—Ä–∏–∫–ª–∞–¥:
# Alex Korp,3000
# Nikita Borisenko,2000
# Sitarama Raju,1000


# –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ —Ç–æ—á–Ω–æ –æ–±—á–∏—Å–ª—é–≤–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —Ç–∞ —Å–µ—Ä–µ–¥–Ω—é —Å—É–º–∏.
# –§—É–Ω–∫—Ü—ñ—è total_salary(path) –º–∞—î –ø—Ä–∏–π–º–∞—Ç–∏ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç - —à–ª—è—Ö –¥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª—É (path).
# –§–∞–π–ª –º—ñ—Å—Ç–∏—Ç—å –¥–∞–Ω—ñ –ø—Ä–æ –∑–∞—Ä–æ–±—ñ—Ç–Ω—ñ –ø–ª–∞—Ç–∏ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ö–æ–∂–µ–Ω —Ä—è–¥–æ–∫ 
# –≤–∫–∞–∑—É—î –Ω–∞ –æ–¥–Ω–æ–≥–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞.
# –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ä–æ–±–æ—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó —î –∫–æ—Ä—Ç–µ–∂ —ñ–∑ –¥–≤–æ—Ö —á–∏—Å–µ–ª
def create_file(file_path : str = None) -> str :   
    
    #if file_path and  file_path ;

    fh = open("test.file", 'w')
    
    if employees :
        for employee in employees:
            fh.write(f"{employee['name']}, {employee['salary']}\n") 

   # symbols_written = fh.write('hello!')
   # print(symbols_written) 
    fh.close()
    return file_path


def total_salary(file_path : str = "") -> tuple :
    # –ü–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –æ–±—Ä–æ–±–∫–∞ –≤–∏–ø–∞–¥–∫—ñ–≤, –∫–æ–ª–∏ —Ñ–∞–π–ª –≤—ñ–¥—Å—É—Ç–Ω—ñ–π –∞–±–æ –ø–æ—à–∫–æ–¥–∂–µ–Ω–∏–π.
    # –û–ø—Ä–∞—Ü—å–æ–≤—É–π—Ç–µ –º–æ–∂–ª–∏–≤—ñ –≤–∏–Ω—è—Ç–∫–∏ –ø—Ä–∏ —Ä–æ–±–æ—Ç—ñ –∑ —Ñ–∞–π–ª–∞–º–∏, —Ç–∞–∫—ñ —è–∫ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Ñ–∞–π–ª—É.
    salary = 0
    empoyees_number = =
   
    with open(file_path, "r") as file_object :
  
        #lines = [el.strip() for el in fh.readlines()]
        while True:
            line = file_object.readline()
            if not line:
                break
           
        pattern = r"[^\d]"
        salary += int(re.sub(pattern, '', line.strip()))
        empoyees_number += 1
                # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç—É with –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤.
        # –ü–∞–º'—è—Ç–∞–π—Ç–µ –ø—Ä–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–¥—É–≤–∞–Ω–Ω—è –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—ñ —Ñ–∞–π–ª—ñ–≤
        # –î–ª—è —Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É –∫–æ–∂–Ω–æ–º—É —Ä—è–¥–∫—É –º–æ–∂–Ω–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –º–µ—Ç–æ–¥ split(',').
        # –û–±—Ä–∞—Ö—É–π—Ç–µ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –∑–∞—Ä–æ–±—ñ—Ç–Ω–æ—ó –ø–ª–∞—Ç–∏, –∞ –ø–æ—Ç—ñ–º —Ä–æ–∑–¥—ñ–ª—ñ—Ç—å —ó—ó –Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å 
        # —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–µ—Ä–µ–¥–Ω—é –∑–∞—Ä–ø–ª–∞—Ç—É.


empl = [{'name':'Alex Korp', 'salary': 3000},
{'name':'Nikita Borisenko', 'salary': 2000},
{'name':'Sitarama Raju', 'salary': 1000}]

total, average = total_salary(create_file(empl))
#total, average = total_salary(input("–í–∫–∞–∂—ñ—Ç—å —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è: "))
print(f"–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–∞—Ä–æ–±—ñ—Ç–Ω–æ—ó –ø–ª–∞—Ç–∏: {total}, –°–µ—Ä–µ–¥–Ω—è –∑–∞—Ä–æ–±—ñ—Ç–Ω–∞ –ø–ª–∞—Ç–∞: {average}")